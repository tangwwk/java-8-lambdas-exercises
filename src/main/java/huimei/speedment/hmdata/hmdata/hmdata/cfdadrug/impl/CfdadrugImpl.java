package huimei.speedment.hmdata.hmdata.hmdata.cfdadrug.impl;

import com.speedment.Speedment;
import com.speedment.internal.core.code.AbstractBaseEntity;
import huimei.speedment.hmdata.hmdata.hmdata.cfdadrug.Cfdadrug;
import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;
import javax.annotation.Generated;

/**
 * An implementation representing an entity (for example, a row) in the
 * com.speedment.internal.ui.config.TableProperty@25da935b.
 * <p>
 * This Class or Interface has been automatically generated by Speedment. Any
 * changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public final class CfdadrugImpl extends AbstractBaseEntity<Cfdadrug> implements Cfdadrug {
    
    private Integer id;
    private Integer cfdaId;
    private String drugType;
    private String registerNo;
    private String originalRegisterNo;
    private String approvalNumber;
    private String cnCompanyName;
    private String enCompanyName;
    private String cnAddress;
    private String enAddress;
    private String cnCountriesRegions;
    private String enCountriesRegions;
    private String cnProductName;
    private String enProductName;
    private String cnTradeName;
    private String enTradeName;
    private String dosageForm;
    private String specification;
    private String packingSpecification;
    private String cnManufacturer;
    private String enManufacturer;
    private String cnManufacturerAddr;
    private String enManufacturerAddr;
    private String cnManufacturerRegions;
    private String enManufacturerRegions;
    private String dateIssue;
    private String validityDeadlines;
    private String subPackCompanyName;
    private String subPackCompanyAddr;
    private String subPackReferenceDate;
    private String subPackReferenceDeadlines;
    private String productClass;
    private String standardCode;
    private String standardCodeRemark;
    
    CfdadrugImpl(Speedment speedment) {
        super(speedment);
    }
    
    public CfdadrugImpl(Speedment speedment, final Cfdadrug cfdadrug) {
        super(speedment);
        setId(cfdadrug.getId());
        cfdadrug.getCfdaId().ifPresent(this::setCfdaId);
        cfdadrug.getDrugType().ifPresent(this::setDrugType);
        cfdadrug.getRegisterNo().ifPresent(this::setRegisterNo);
        cfdadrug.getOriginalRegisterNo().ifPresent(this::setOriginalRegisterNo);
        cfdadrug.getApprovalNumber().ifPresent(this::setApprovalNumber);
        cfdadrug.getCnCompanyName().ifPresent(this::setCnCompanyName);
        cfdadrug.getEnCompanyName().ifPresent(this::setEnCompanyName);
        cfdadrug.getCnAddress().ifPresent(this::setCnAddress);
        cfdadrug.getEnAddress().ifPresent(this::setEnAddress);
        cfdadrug.getCnCountriesRegions().ifPresent(this::setCnCountriesRegions);
        cfdadrug.getEnCountriesRegions().ifPresent(this::setEnCountriesRegions);
        cfdadrug.getCnProductName().ifPresent(this::setCnProductName);
        cfdadrug.getEnProductName().ifPresent(this::setEnProductName);
        cfdadrug.getCnTradeName().ifPresent(this::setCnTradeName);
        cfdadrug.getEnTradeName().ifPresent(this::setEnTradeName);
        cfdadrug.getDosageForm().ifPresent(this::setDosageForm);
        cfdadrug.getSpecification().ifPresent(this::setSpecification);
        cfdadrug.getPackingSpecification().ifPresent(this::setPackingSpecification);
        cfdadrug.getCnManufacturer().ifPresent(this::setCnManufacturer);
        cfdadrug.getEnManufacturer().ifPresent(this::setEnManufacturer);
        cfdadrug.getCnManufacturerAddr().ifPresent(this::setCnManufacturerAddr);
        cfdadrug.getEnManufacturerAddr().ifPresent(this::setEnManufacturerAddr);
        cfdadrug.getCnManufacturerRegions().ifPresent(this::setCnManufacturerRegions);
        cfdadrug.getEnManufacturerRegions().ifPresent(this::setEnManufacturerRegions);
        cfdadrug.getDateIssue().ifPresent(this::setDateIssue);
        cfdadrug.getValidityDeadlines().ifPresent(this::setValidityDeadlines);
        cfdadrug.getSubPackCompanyName().ifPresent(this::setSubPackCompanyName);
        cfdadrug.getSubPackCompanyAddr().ifPresent(this::setSubPackCompanyAddr);
        cfdadrug.getSubPackReferenceDate().ifPresent(this::setSubPackReferenceDate);
        cfdadrug.getSubPackReferenceDeadlines().ifPresent(this::setSubPackReferenceDeadlines);
        cfdadrug.getProductClass().ifPresent(this::setProductClass);
        cfdadrug.getStandardCode().ifPresent(this::setStandardCode);
        cfdadrug.getStandardCodeRemark().ifPresent(this::setStandardCodeRemark);
    }
    
    @Override
    public Integer getId() {
        return id;
    }
    
    @Override
    public Optional<Integer> getCfdaId() {
        return Optional.ofNullable(cfdaId);
    }
    
    @Override
    public Optional<String> getDrugType() {
        return Optional.ofNullable(drugType);
    }
    
    @Override
    public Optional<String> getRegisterNo() {
        return Optional.ofNullable(registerNo);
    }
    
    @Override
    public Optional<String> getOriginalRegisterNo() {
        return Optional.ofNullable(originalRegisterNo);
    }
    
    @Override
    public Optional<String> getApprovalNumber() {
        return Optional.ofNullable(approvalNumber);
    }
    
    @Override
    public Optional<String> getCnCompanyName() {
        return Optional.ofNullable(cnCompanyName);
    }
    
    @Override
    public Optional<String> getEnCompanyName() {
        return Optional.ofNullable(enCompanyName);
    }
    
    @Override
    public Optional<String> getCnAddress() {
        return Optional.ofNullable(cnAddress);
    }
    
    @Override
    public Optional<String> getEnAddress() {
        return Optional.ofNullable(enAddress);
    }
    
    @Override
    public Optional<String> getCnCountriesRegions() {
        return Optional.ofNullable(cnCountriesRegions);
    }
    
    @Override
    public Optional<String> getEnCountriesRegions() {
        return Optional.ofNullable(enCountriesRegions);
    }
    
    @Override
    public Optional<String> getCnProductName() {
        return Optional.ofNullable(cnProductName);
    }
    
    @Override
    public Optional<String> getEnProductName() {
        return Optional.ofNullable(enProductName);
    }
    
    @Override
    public Optional<String> getCnTradeName() {
        return Optional.ofNullable(cnTradeName);
    }
    
    @Override
    public Optional<String> getEnTradeName() {
        return Optional.ofNullable(enTradeName);
    }
    
    @Override
    public Optional<String> getDosageForm() {
        return Optional.ofNullable(dosageForm);
    }
    
    @Override
    public Optional<String> getSpecification() {
        return Optional.ofNullable(specification);
    }
    
    @Override
    public Optional<String> getPackingSpecification() {
        return Optional.ofNullable(packingSpecification);
    }
    
    @Override
    public Optional<String> getCnManufacturer() {
        return Optional.ofNullable(cnManufacturer);
    }
    
    @Override
    public Optional<String> getEnManufacturer() {
        return Optional.ofNullable(enManufacturer);
    }
    
    @Override
    public Optional<String> getCnManufacturerAddr() {
        return Optional.ofNullable(cnManufacturerAddr);
    }
    
    @Override
    public Optional<String> getEnManufacturerAddr() {
        return Optional.ofNullable(enManufacturerAddr);
    }
    
    @Override
    public Optional<String> getCnManufacturerRegions() {
        return Optional.ofNullable(cnManufacturerRegions);
    }
    
    @Override
    public Optional<String> getEnManufacturerRegions() {
        return Optional.ofNullable(enManufacturerRegions);
    }
    
    @Override
    public Optional<String> getDateIssue() {
        return Optional.ofNullable(dateIssue);
    }
    
    @Override
    public Optional<String> getValidityDeadlines() {
        return Optional.ofNullable(validityDeadlines);
    }
    
    @Override
    public Optional<String> getSubPackCompanyName() {
        return Optional.ofNullable(subPackCompanyName);
    }
    
    @Override
    public Optional<String> getSubPackCompanyAddr() {
        return Optional.ofNullable(subPackCompanyAddr);
    }
    
    @Override
    public Optional<String> getSubPackReferenceDate() {
        return Optional.ofNullable(subPackReferenceDate);
    }
    
    @Override
    public Optional<String> getSubPackReferenceDeadlines() {
        return Optional.ofNullable(subPackReferenceDeadlines);
    }
    
    @Override
    public Optional<String> getProductClass() {
        return Optional.ofNullable(productClass);
    }
    
    @Override
    public Optional<String> getStandardCode() {
        return Optional.ofNullable(standardCode);
    }
    
    @Override
    public Optional<String> getStandardCodeRemark() {
        return Optional.ofNullable(standardCodeRemark);
    }
    
    @Override
    public final CfdadrugImpl setId(Integer id) {
        this.id = id;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setCfdaId(Integer cfdaId) {
        this.cfdaId = cfdaId;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setDrugType(String drugType) {
        this.drugType = drugType;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setRegisterNo(String registerNo) {
        this.registerNo = registerNo;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setOriginalRegisterNo(String originalRegisterNo) {
        this.originalRegisterNo = originalRegisterNo;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setApprovalNumber(String approvalNumber) {
        this.approvalNumber = approvalNumber;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setCnCompanyName(String cnCompanyName) {
        this.cnCompanyName = cnCompanyName;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setEnCompanyName(String enCompanyName) {
        this.enCompanyName = enCompanyName;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setCnAddress(String cnAddress) {
        this.cnAddress = cnAddress;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setEnAddress(String enAddress) {
        this.enAddress = enAddress;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setCnCountriesRegions(String cnCountriesRegions) {
        this.cnCountriesRegions = cnCountriesRegions;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setEnCountriesRegions(String enCountriesRegions) {
        this.enCountriesRegions = enCountriesRegions;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setCnProductName(String cnProductName) {
        this.cnProductName = cnProductName;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setEnProductName(String enProductName) {
        this.enProductName = enProductName;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setCnTradeName(String cnTradeName) {
        this.cnTradeName = cnTradeName;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setEnTradeName(String enTradeName) {
        this.enTradeName = enTradeName;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setDosageForm(String dosageForm) {
        this.dosageForm = dosageForm;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setSpecification(String specification) {
        this.specification = specification;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setPackingSpecification(String packingSpecification) {
        this.packingSpecification = packingSpecification;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setCnManufacturer(String cnManufacturer) {
        this.cnManufacturer = cnManufacturer;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setEnManufacturer(String enManufacturer) {
        this.enManufacturer = enManufacturer;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setCnManufacturerAddr(String cnManufacturerAddr) {
        this.cnManufacturerAddr = cnManufacturerAddr;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setEnManufacturerAddr(String enManufacturerAddr) {
        this.enManufacturerAddr = enManufacturerAddr;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setCnManufacturerRegions(String cnManufacturerRegions) {
        this.cnManufacturerRegions = cnManufacturerRegions;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setEnManufacturerRegions(String enManufacturerRegions) {
        this.enManufacturerRegions = enManufacturerRegions;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setDateIssue(String dateIssue) {
        this.dateIssue = dateIssue;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setValidityDeadlines(String validityDeadlines) {
        this.validityDeadlines = validityDeadlines;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setSubPackCompanyName(String subPackCompanyName) {
        this.subPackCompanyName = subPackCompanyName;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setSubPackCompanyAddr(String subPackCompanyAddr) {
        this.subPackCompanyAddr = subPackCompanyAddr;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setSubPackReferenceDate(String subPackReferenceDate) {
        this.subPackReferenceDate = subPackReferenceDate;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setSubPackReferenceDeadlines(String subPackReferenceDeadlines) {
        this.subPackReferenceDeadlines = subPackReferenceDeadlines;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setProductClass(String productClass) {
        this.productClass = productClass;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setStandardCode(String standardCode) {
        this.standardCode = standardCode;
        return this;
    }
    
    @Override
    public final CfdadrugImpl setStandardCodeRemark(String standardCodeRemark) {
        this.standardCodeRemark = standardCodeRemark;
        return this;
    }
    
    @Override
    public Cfdadrug copy() {
        return new CfdadrugImpl(getSpeedment_(), this);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "+Objects.toString(getId()));
        sj.add("cfdaId = "+Objects.toString(getCfdaId().orElse(null)));
        sj.add("drugType = "+Objects.toString(getDrugType().orElse(null)));
        sj.add("registerNo = "+Objects.toString(getRegisterNo().orElse(null)));
        sj.add("originalRegisterNo = "+Objects.toString(getOriginalRegisterNo().orElse(null)));
        sj.add("approvalNumber = "+Objects.toString(getApprovalNumber().orElse(null)));
        sj.add("cnCompanyName = "+Objects.toString(getCnCompanyName().orElse(null)));
        sj.add("enCompanyName = "+Objects.toString(getEnCompanyName().orElse(null)));
        sj.add("cnAddress = "+Objects.toString(getCnAddress().orElse(null)));
        sj.add("enAddress = "+Objects.toString(getEnAddress().orElse(null)));
        sj.add("cnCountriesRegions = "+Objects.toString(getCnCountriesRegions().orElse(null)));
        sj.add("enCountriesRegions = "+Objects.toString(getEnCountriesRegions().orElse(null)));
        sj.add("cnProductName = "+Objects.toString(getCnProductName().orElse(null)));
        sj.add("enProductName = "+Objects.toString(getEnProductName().orElse(null)));
        sj.add("cnTradeName = "+Objects.toString(getCnTradeName().orElse(null)));
        sj.add("enTradeName = "+Objects.toString(getEnTradeName().orElse(null)));
        sj.add("dosageForm = "+Objects.toString(getDosageForm().orElse(null)));
        sj.add("specification = "+Objects.toString(getSpecification().orElse(null)));
        sj.add("packingSpecification = "+Objects.toString(getPackingSpecification().orElse(null)));
        sj.add("cnManufacturer = "+Objects.toString(getCnManufacturer().orElse(null)));
        sj.add("enManufacturer = "+Objects.toString(getEnManufacturer().orElse(null)));
        sj.add("cnManufacturerAddr = "+Objects.toString(getCnManufacturerAddr().orElse(null)));
        sj.add("enManufacturerAddr = "+Objects.toString(getEnManufacturerAddr().orElse(null)));
        sj.add("cnManufacturerRegions = "+Objects.toString(getCnManufacturerRegions().orElse(null)));
        sj.add("enManufacturerRegions = "+Objects.toString(getEnManufacturerRegions().orElse(null)));
        sj.add("dateIssue = "+Objects.toString(getDateIssue().orElse(null)));
        sj.add("validityDeadlines = "+Objects.toString(getValidityDeadlines().orElse(null)));
        sj.add("subPackCompanyName = "+Objects.toString(getSubPackCompanyName().orElse(null)));
        sj.add("subPackCompanyAddr = "+Objects.toString(getSubPackCompanyAddr().orElse(null)));
        sj.add("subPackReferenceDate = "+Objects.toString(getSubPackReferenceDate().orElse(null)));
        sj.add("subPackReferenceDeadlines = "+Objects.toString(getSubPackReferenceDeadlines().orElse(null)));
        sj.add("productClass = "+Objects.toString(getProductClass().orElse(null)));
        sj.add("standardCode = "+Objects.toString(getStandardCode().orElse(null)));
        sj.add("standardCodeRemark = "+Objects.toString(getStandardCodeRemark().orElse(null)));
        return "CfdadrugImpl "+sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Cfdadrug)) { return false; }
        @SuppressWarnings("unchecked")
        final Cfdadrug thatCfdadrug = (Cfdadrug)that;
        if (!Objects.equals(this.getId(), thatCfdadrug.getId())) {return false; }
        if (!Objects.equals(this.getCfdaId(), thatCfdadrug.getCfdaId())) {return false; }
        if (!Objects.equals(this.getDrugType(), thatCfdadrug.getDrugType())) {return false; }
        if (!Objects.equals(this.getRegisterNo(), thatCfdadrug.getRegisterNo())) {return false; }
        if (!Objects.equals(this.getOriginalRegisterNo(), thatCfdadrug.getOriginalRegisterNo())) {return false; }
        if (!Objects.equals(this.getApprovalNumber(), thatCfdadrug.getApprovalNumber())) {return false; }
        if (!Objects.equals(this.getCnCompanyName(), thatCfdadrug.getCnCompanyName())) {return false; }
        if (!Objects.equals(this.getEnCompanyName(), thatCfdadrug.getEnCompanyName())) {return false; }
        if (!Objects.equals(this.getCnAddress(), thatCfdadrug.getCnAddress())) {return false; }
        if (!Objects.equals(this.getEnAddress(), thatCfdadrug.getEnAddress())) {return false; }
        if (!Objects.equals(this.getCnCountriesRegions(), thatCfdadrug.getCnCountriesRegions())) {return false; }
        if (!Objects.equals(this.getEnCountriesRegions(), thatCfdadrug.getEnCountriesRegions())) {return false; }
        if (!Objects.equals(this.getCnProductName(), thatCfdadrug.getCnProductName())) {return false; }
        if (!Objects.equals(this.getEnProductName(), thatCfdadrug.getEnProductName())) {return false; }
        if (!Objects.equals(this.getCnTradeName(), thatCfdadrug.getCnTradeName())) {return false; }
        if (!Objects.equals(this.getEnTradeName(), thatCfdadrug.getEnTradeName())) {return false; }
        if (!Objects.equals(this.getDosageForm(), thatCfdadrug.getDosageForm())) {return false; }
        if (!Objects.equals(this.getSpecification(), thatCfdadrug.getSpecification())) {return false; }
        if (!Objects.equals(this.getPackingSpecification(), thatCfdadrug.getPackingSpecification())) {return false; }
        if (!Objects.equals(this.getCnManufacturer(), thatCfdadrug.getCnManufacturer())) {return false; }
        if (!Objects.equals(this.getEnManufacturer(), thatCfdadrug.getEnManufacturer())) {return false; }
        if (!Objects.equals(this.getCnManufacturerAddr(), thatCfdadrug.getCnManufacturerAddr())) {return false; }
        if (!Objects.equals(this.getEnManufacturerAddr(), thatCfdadrug.getEnManufacturerAddr())) {return false; }
        if (!Objects.equals(this.getCnManufacturerRegions(), thatCfdadrug.getCnManufacturerRegions())) {return false; }
        if (!Objects.equals(this.getEnManufacturerRegions(), thatCfdadrug.getEnManufacturerRegions())) {return false; }
        if (!Objects.equals(this.getDateIssue(), thatCfdadrug.getDateIssue())) {return false; }
        if (!Objects.equals(this.getValidityDeadlines(), thatCfdadrug.getValidityDeadlines())) {return false; }
        if (!Objects.equals(this.getSubPackCompanyName(), thatCfdadrug.getSubPackCompanyName())) {return false; }
        if (!Objects.equals(this.getSubPackCompanyAddr(), thatCfdadrug.getSubPackCompanyAddr())) {return false; }
        if (!Objects.equals(this.getSubPackReferenceDate(), thatCfdadrug.getSubPackReferenceDate())) {return false; }
        if (!Objects.equals(this.getSubPackReferenceDeadlines(), thatCfdadrug.getSubPackReferenceDeadlines())) {return false; }
        if (!Objects.equals(this.getProductClass(), thatCfdadrug.getProductClass())) {return false; }
        if (!Objects.equals(this.getStandardCode(), thatCfdadrug.getStandardCode())) {return false; }
        if (!Objects.equals(this.getStandardCodeRemark(), thatCfdadrug.getStandardCodeRemark())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(getCfdaId());
        hash = 31 * hash + Objects.hashCode(getDrugType());
        hash = 31 * hash + Objects.hashCode(getRegisterNo());
        hash = 31 * hash + Objects.hashCode(getOriginalRegisterNo());
        hash = 31 * hash + Objects.hashCode(getApprovalNumber());
        hash = 31 * hash + Objects.hashCode(getCnCompanyName());
        hash = 31 * hash + Objects.hashCode(getEnCompanyName());
        hash = 31 * hash + Objects.hashCode(getCnAddress());
        hash = 31 * hash + Objects.hashCode(getEnAddress());
        hash = 31 * hash + Objects.hashCode(getCnCountriesRegions());
        hash = 31 * hash + Objects.hashCode(getEnCountriesRegions());
        hash = 31 * hash + Objects.hashCode(getCnProductName());
        hash = 31 * hash + Objects.hashCode(getEnProductName());
        hash = 31 * hash + Objects.hashCode(getCnTradeName());
        hash = 31 * hash + Objects.hashCode(getEnTradeName());
        hash = 31 * hash + Objects.hashCode(getDosageForm());
        hash = 31 * hash + Objects.hashCode(getSpecification());
        hash = 31 * hash + Objects.hashCode(getPackingSpecification());
        hash = 31 * hash + Objects.hashCode(getCnManufacturer());
        hash = 31 * hash + Objects.hashCode(getEnManufacturer());
        hash = 31 * hash + Objects.hashCode(getCnManufacturerAddr());
        hash = 31 * hash + Objects.hashCode(getEnManufacturerAddr());
        hash = 31 * hash + Objects.hashCode(getCnManufacturerRegions());
        hash = 31 * hash + Objects.hashCode(getEnManufacturerRegions());
        hash = 31 * hash + Objects.hashCode(getDateIssue());
        hash = 31 * hash + Objects.hashCode(getValidityDeadlines());
        hash = 31 * hash + Objects.hashCode(getSubPackCompanyName());
        hash = 31 * hash + Objects.hashCode(getSubPackCompanyAddr());
        hash = 31 * hash + Objects.hashCode(getSubPackReferenceDate());
        hash = 31 * hash + Objects.hashCode(getSubPackReferenceDeadlines());
        hash = 31 * hash + Objects.hashCode(getProductClass());
        hash = 31 * hash + Objects.hashCode(getStandardCode());
        hash = 31 * hash + Objects.hashCode(getStandardCodeRemark());
        return hash;
    }
    
    @Override
    public Class<Cfdadrug> getEntityClass_() {
        return Cfdadrug.class;
    }
}