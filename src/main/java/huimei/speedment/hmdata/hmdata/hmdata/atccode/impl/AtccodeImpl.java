package huimei.speedment.hmdata.hmdata.hmdata.atccode.impl;

import com.speedment.Speedment;
import com.speedment.internal.core.code.AbstractBaseEntity;
import huimei.speedment.hmdata.hmdata.hmdata.atccode.Atccode;
import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;
import javax.annotation.Generated;

/**
 * An implementation representing an entity (for example, a row) in the
 * com.speedment.internal.ui.config.TableProperty@7f4ab589.
 * <p>
 * This Class or Interface has been automatically generated by Speedment. Any
 * changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public final class AtccodeImpl extends AbstractBaseEntity<Atccode> implements Atccode {
    
    private Integer id;
    private String atcCode;
    private String name;
    private String enName;
    private Integer page;
    
    AtccodeImpl(Speedment speedment) {
        super(speedment);
    }
    
    public AtccodeImpl(Speedment speedment, final Atccode atccode) {
        super(speedment);
        setId(atccode.getId());
        atccode.getAtcCode().ifPresent(this::setAtcCode);
        atccode.getName().ifPresent(this::setName);
        atccode.getEnName().ifPresent(this::setEnName);
        atccode.getPage().ifPresent(this::setPage);
    }
    
    @Override
    public Integer getId() {
        return id;
    }
    
    @Override
    public Optional<String> getAtcCode() {
        return Optional.ofNullable(atcCode);
    }
    
    @Override
    public Optional<String> getName() {
        return Optional.ofNullable(name);
    }
    
    @Override
    public Optional<String> getEnName() {
        return Optional.ofNullable(enName);
    }
    
    @Override
    public Optional<Integer> getPage() {
        return Optional.ofNullable(page);
    }
    
    @Override
    public final AtccodeImpl setId(Integer id) {
        this.id = id;
        return this;
    }
    
    @Override
    public final AtccodeImpl setAtcCode(String atcCode) {
        this.atcCode = atcCode;
        return this;
    }
    
    @Override
    public final AtccodeImpl setName(String name) {
        this.name = name;
        return this;
    }
    
    @Override
    public final AtccodeImpl setEnName(String enName) {
        this.enName = enName;
        return this;
    }
    
    @Override
    public final AtccodeImpl setPage(Integer page) {
        this.page = page;
        return this;
    }
    
    @Override
    public Atccode copy() {
        return new AtccodeImpl(getSpeedment_(), this);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "+Objects.toString(getId()));
        sj.add("atcCode = "+Objects.toString(getAtcCode().orElse(null)));
        sj.add("name = "+Objects.toString(getName().orElse(null)));
        sj.add("enName = "+Objects.toString(getEnName().orElse(null)));
        sj.add("page = "+Objects.toString(getPage().orElse(null)));
        return "AtccodeImpl "+sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Atccode)) { return false; }
        @SuppressWarnings("unchecked")
        final Atccode thatAtccode = (Atccode)that;
        if (!Objects.equals(this.getId(), thatAtccode.getId())) {return false; }
        if (!Objects.equals(this.getAtcCode(), thatAtccode.getAtcCode())) {return false; }
        if (!Objects.equals(this.getName(), thatAtccode.getName())) {return false; }
        if (!Objects.equals(this.getEnName(), thatAtccode.getEnName())) {return false; }
        if (!Objects.equals(this.getPage(), thatAtccode.getPage())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(getAtcCode());
        hash = 31 * hash + Objects.hashCode(getName());
        hash = 31 * hash + Objects.hashCode(getEnName());
        hash = 31 * hash + Objects.hashCode(getPage());
        return hash;
    }
    
    @Override
    public Class<Atccode> getEntityClass_() {
        return Atccode.class;
    }
}